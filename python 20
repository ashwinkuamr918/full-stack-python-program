{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d06beec1-47a3-4827-9b0a-faffab80af56",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello, python full stack students!\n"
     ]
    }
   ],
   "source": [
    "print(\"hello, python full stack students!\")   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "452a22e0-7e2a-46c6-b256-e406635d2353",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i'm ashwin nice to meet you!\n"
     ]
    }
   ],
   "source": [
    "print(\"i'm ashwin nice to meet you!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f869b4cd-0511-43fb-b5e3-6ac56947b3cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "may i know your name?\n"
     ]
    }
   ],
   "source": [
    "print(\"may i know your name?\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e7442f9-5872-43d2-8826-5822869480e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "745af074-5aaf-457e-be32-5515ceb4a940",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ashwin 20 8.5 true\n"
     ]
    }
   ],
   "source": [
    "name=\"ashwin\"\n",
    "age=20\n",
    "gpa=8.5\n",
    "is_student=\"true\"\n",
    "print(name,age,gpa,is_student)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1fd75c3c-e4ae-4a10-8b91-04547ab19aa3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'> <class 'float'> <class 'str'> <class 'bool'>\n"
     ]
    }
   ],
   "source": [
    "x=10\n",
    "y=3.14\n",
    "z=\"python\"\n",
    "flag=False\n",
    "print(type(x),type(y),type(z),type(flag))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b82e08e6-2df6-443c-a4d5-264169ad607e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ashwin avinish_collage_commarse pythom\n"
     ]
    }
   ],
   "source": [
    "name=\"ashwin\"\n",
    "collage=\"avinish_collage_commarse\"\n",
    "favorite_programming_language=\"pythom\"\n",
    "print(name,collage,favorite_programming_language)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d9b6f3fc-ccbe-46a7-bb84-afba517773a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20\n"
     ]
    }
   ],
   "source": [
    "year_of_birth=2005\n",
    "current=2025\n",
    "age=current-year_of_birth\n",
    "print(age)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "21e576ec-a0b9-403b-a6e9-26990060fca3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "saalar 2024 9.0\n"
     ]
    }
   ],
   "source": [
    "movie_name=\"saalar\"\n",
    "release_year=2024\n",
    "rating=9.0\n",
    "print(movie_name,release_year,rating)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ae53a128-7422-4b5a-8b84-fd9930ad1864",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "addition: 39\n",
      "division: 0.95\n",
      "floor_division: 0\n",
      "power: 37589973457545958193355601\n"
     ]
    }
   ],
   "source": [
    "a=19\n",
    "b=20\n",
    "print(\"addition:\",a+b)\n",
    "print(\"division:\",a/b)\n",
    "print(\"floor_division:\",a//b)\n",
    "print(\"power:\",a**b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "25782ff5-e3b0-4200-b3db-014778e0d54c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n",
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "a=10\n",
    "b=30\n",
    "print(a>b)#false\n",
    "print(a==10)#true\n",
    "print((a<b)and(b==30))#true"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b02b4496-8376-4774-869a-d4230b84b568",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
